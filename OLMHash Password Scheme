#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(){

	FILE *fp;
	char* row = malloc(256*sizeof(char));

	char username[100];
	char * tableEntry = malloc(256*sizeof(char));	
	char * password = malloc(256*sizeof(char));
	int validUsername = 0;
	int validPassword= 0;
	
	

	printf("Please enter your username between 4 - 32 characters: ");
	scanf("%s", &username);


	//checks for a valid username, user re-enters username if invalid
	while(validUsername == 0){	
	if(strlen(username) < 4  || strlen(username) > 32){
		printf("Username length wrong, please enter your username again: ");
		scanf("%s", &username);
		}
		
		else{
		validUsername = 1;
		} 
	}
	
	//opens the database with saved usernames and passwords
	fp = fopen("table.txt", "r+");
	
	char* tableUser;
	char* delimeter = " ";
	
	//while loop that reads from the database
	while(1)
	{
		
		//checks for exisitng users in the databae, prompts different options based on new and returning users
		if(fgets(row, 100, fp) == NULL){ 
		printf("Please enter a password. Only use lower case, upper case and numbers with a max of 12 characters with no special characters. Password will only save the first 12 characters: ");
		scanf("%s", password);
		int i = 0;
		
		//loops for creating a new user's password in the database
		while(validPassword == 0){
		for(i; i < strlen(password); i++){
			if(!(isalpha(password[i]) || isdigit(password[i]))){
				printf("Error: Enter a valid password: ");
				scanf("%s", password);
				}
			else validPassword = 1;			
				}	
			
			strcpy(tableEntry, username);
			strcat(tableEntry, " ");
			strcat(tableEntry, password);
			fprintf(fp, "%s\n", tableEntry);
			break;
			}
		 break;		
		}

		//asks returning users for old password
		tableUser = strtok(row, delimeter);
		if(strcmp(tableUser, username) == 0 ){ 
		printf("Please enter your old password: ");
		scanf("%s", &password);
		
		break;
		}
	}


	fclose(fp);
	//printf("you entered: %s\n", username);
		
	return 0;
}
